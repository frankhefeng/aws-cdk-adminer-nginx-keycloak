server {
    index index.php index.html;
    server_name localhost;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    location / {
        return 200 'ok';
        add_header Content-Type text/plain;
    }

    location /health {
        return 200 'healthy';
        add_header Content-Type text/plain;
    }

    location /adminer {
        # Any request to this server will first be sent to this URL
        auth_request /vouch-validate;

        fastcgi_split_path_info ^(.+\.php-fpm)(/.+)$;
        fastcgi_pass $ADMINER_HOST:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/html/index.php;
        fastcgi_param DOCUMENT_ROOT   /var/www/html/;
    }

    location = /vouch-validate {
        # This address is where Vouch will be listening on
        proxy_pass https://$VOUCH_HOST/validate;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        # be sure to pass the original host header
        proxy_set_header Host $http_host;

        # Vouch Proxy only acts on the request headers
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";

        # these return values are used by the @error401 call
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    }

    error_page 401 = @error401;

    # If the user is not logged in, redirect them to Vouch's login URL
    location @error401 {
        return 302 https://$VOUCH_HOST/login?url=https://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;

    }
}
